//%icon="\uf277" color="#59bd96"
namespace map{
    let levels: level[] = []
    let numLevels = 0
    let seed = 206
    let selected = 0
    let sceneIdx = 0
    let cursor: Sprite
    let cursorImgs: Image[] = []
    let oneCursor: Image
    let levelClickHandler: ((index: number) => void) | null = null;
    let lvlsUnlocked = 1
    let backgrounds: Image[] = []
    let e: Image[]
    let bled = false
    let unlockedImages: Image[] = []
    let oneUnlockedImage: Image
    let lockedImages: Image[] = []
    let oneLockedImage: Image
    let specialLevels: {[key: number]: {locked: Image, unlocked: Image}} = {}
    //%block
    export let inMenu = true
    export class level{
        public sprite: Sprite
        public text: TextSprite
        public unlocked: boolean
        constructor(unlocked: boolean){
            this.sprite = sprites.create(unlocked?oneUnlockedImage?oneUnlockedImage:unlockedImages[sceneIdx]?unlockedImages[sceneIdx]:img`
                . . . . . 4 4 4 4 4 4 . . . . .
                . . . 4 4 4 4 4 4 4 4 4 4 . . .
                . . 4 4 4 4 4 4 4 4 4 4 4 4 . .
                . 4 4 4 4 4 4 4 4 4 4 4 4 4 4 .
                . 4 4 4 4 4 4 4 4 4 4 4 4 4 4 .
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                . 4 4 4 4 4 4 4 4 4 4 4 4 4 4 .
                . 4 4 4 4 4 4 4 4 4 4 4 4 4 4 .
                . . 4 4 4 4 4 4 4 4 4 4 4 4 . .
                . . . 4 4 4 4 4 4 4 4 4 4 . . .
                . . . . . 4 4 4 4 4 4 . . . . .
            `:oneLockedImage?oneLockedImage:lockedImages[sceneIdx]?lockedImages[sceneIdx]:img`
                . . . . . b b b b b b . . . . .
                . . . b b b b b b b b b b . . .
                . . b b b b b b b b b b b b . .
                . b b b b b b b b b b b b b b .
                . b b b b b b b b b b b b b b .
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                . b b b b b b b b b b b b b b .
                . b b b b b b b b b b b b b b .
                . . b b b b b b b b b b b b . .
                . . . b b b b b b b b b b . . .
                . . . . . b b b b b b . . . . .
            `)
            this.text = textsprite.create("")
            this.unlocked = unlocked
        }
        toggleUnlocked(unlocked: boolean){
            this.sprite.setImage(unlocked?oneUnlockedImage?oneUnlockedImage:unlockedImages[sceneIdx]?unlockedImages[sceneIdx]:img`
                . . . . . 4 4 4 4 4 4 . . . . .
                . . . 4 4 4 4 4 4 4 4 4 4 . . .
                . . 4 4 4 4 4 4 4 4 4 4 4 4 . .
                . 4 4 4 4 4 4 4 4 4 4 4 4 4 4 .
                . 4 4 4 4 4 4 4 4 4 4 4 4 4 4 .
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4
                . 4 4 4 4 4 4 4 4 4 4 4 4 4 4 .
                . 4 4 4 4 4 4 4 4 4 4 4 4 4 4 .
                . . 4 4 4 4 4 4 4 4 4 4 4 4 . .
                . . . 4 4 4 4 4 4 4 4 4 4 . . .
                . . . . . 4 4 4 4 4 4 . . . . .
            `:oneLockedImage?oneLockedImage:lockedImages[sceneIdx]?lockedImages[sceneIdx]:img`
                . . . . . b b b b b b . . . . .
                . . . b b b b b b b b b b . . .
                . . b b b b b b b b b b b b . .
                . b b b b b b b b b b b b b b .
                . b b b b b b b b b b b b b b .
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                b b b b b b b b b b b b b b b b
                . b b b b b b b b b b b b b b .
                . b b b b b b b b b b b b b b .
                . . b b b b b b b b b b b b . .
                . . . b b b b b b b b b b . . .
                . . . . . b b b b b b . . . . .
            `)
            this.unlocked = unlocked
        }
    }
    //%block="set level $index's unlocked state to $unlocked and locked state to $locked"
    //%unlocked.shadow="screen_image_picker"
    //%locked.shadow="screen_image_picker"
    export function setupSpecialLevel(index: number, unlocked: Image, locked: Image){
        specialLevels[index] = {unlocked, locked}
    }
    //%block="unlock next level"
    export function unlockNext(){
        lvlsUnlocked+=1
        setupLevels(numLevels)
    }
    //%block="set menu cursor image to $img for scene $index"
    //%img.shadow="screen_image_picker"
    export function setCursor(img: Image, index: number){
        if(index==-1){oneCursor = img; return}
        cursorImgs.set(index, img)
    }
    //%block="setup $ammt levels"
    export function setupLevels(ammt: number){
        if(cursor==null){
            cursor = sprites.create(oneCursor ? oneCursor : cursorImgs[sceneIdx]?cursorImgs[sceneIdx]:img`
                .......444444.......
                .....44......44.....
                ....4..........4....
                ...4............4...
                ..4..............4..
                .4................4.
                .4................4.
                4..................4
                4..................4
                4..................4
                4..................4
                4..................4
                4..................4
                .4................4.
                .4................4.
                ..4..............4..
                ...4............4...
                ....4..........4....
                .....44......44.....
                .......444444.......
            `)
        } else {
            cursor.setImage(oneCursor ? oneCursor : cursorImgs[sceneIdx] ? cursorImgs[sceneIdx] : img`
                .......444444.......
                .....44......44.....
                ....4..........4....
                ...4............4...
                ..4..............4..
                .4................4.
                .4................4.
                4..................4
                4..................4
                4..................4
                4..................4
                4..................4
                4..................4
                .4................4.
                .4................4.
                ..4..............4..
                ...4............4...
                ....4..........4....
                .....44......44.....
                .......444444.......
            `)
        }
        let y = 60
        let level1
        let level2
        let level3
        let level4
        let level5
        let level6
        let level7
        let level8
        numLevels = ammt
        if (ammt >= sceneIdx * 8 + 1){
            level1 = levels[0] ? levels[0] : new level(false)
            level1.toggleUnlocked((1 + sceneIdx * 8)<=lvlsUnlocked)
            level1.sprite.x = 10
            y = seededRandom(y - 10 < 10 ? y : y - 10, y + 10 > screen.width - 10 ? y : y + 10, seed + 1 + sceneIdx*8)
            level1.sprite.y = y
            if (specialLevels[1 + sceneIdx * 8]) level1.sprite.setImage(1 + sceneIdx * 8 <= lvlsUnlocked ? specialLevels[1 + sceneIdx * 8].unlocked : specialLevels[1 + sceneIdx * 8].locked)
            level1.text.setText((1 + sceneIdx * 8).toString())
            level1.text.setPosition(level1.sprite.x, y)
        }
        cursor.setPosition(10, y)
        if (ammt >= sceneIdx * 8 + 2){
            level2 = levels[1] ? levels[1] : new level(false)
            level2.toggleUnlocked((2 + sceneIdx * 8) <= lvlsUnlocked)
            level2.sprite.x = 30
            y = seededRandom(y - 10 < 10 ? y : y - 10, y + 10 > screen.width - 10 ? y : y + 10, seed + 2 + sceneIdx * 8)
            level2.sprite.y = y
            if (specialLevels[2 + sceneIdx * 8]) level2.sprite.setImage(2 + sceneIdx * 8 <= lvlsUnlocked ? specialLevels[2 + sceneIdx * 8].unlocked : specialLevels[2 + sceneIdx * 8].locked)
            level2.text.setText((2 + sceneIdx * 8).toString())
            level2.text.setPosition(level2.sprite.x, y)
            level2.sprite.setFlag(SpriteFlag.Invisible, false)
            level2.text.setFlag(SpriteFlag.Invisible, false)
        } else if(levels[1]) {
            level2 = levels[1]
            level2.sprite.setFlag(SpriteFlag.Invisible, true)
            level2.text.setFlag(SpriteFlag.Invisible, true)
        }
        if (ammt >= sceneIdx * 8 + 3){
            level3 = levels[2] ? levels[2] : new level(false)
            level3.toggleUnlocked((3 + sceneIdx * 8) <= lvlsUnlocked)
            level3.sprite.x = 50
            y = seededRandom(y - 10 < 10 ? y : y - 10, y + 10 > screen.width - 10 ? y : y + 10, seed + 3 + sceneIdx * 8)
            level3.sprite.y = y
            if (specialLevels[3 + sceneIdx * 8]) level3.sprite.setImage(3 + sceneIdx * 8 <= lvlsUnlocked ? specialLevels[3 + sceneIdx * 8].unlocked : specialLevels[3 + sceneIdx * 8].locked)
            level3.text.setText((3 + sceneIdx * 8).toString())
            level3.text.setPosition(level3.sprite.x, y)
            level3.sprite.setFlag(SpriteFlag.Invisible, false)
            level3.text.setFlag(SpriteFlag.Invisible, false)
        } else if (levels[2]) {
            level3 = levels[2]
            level3.sprite.setFlag(SpriteFlag.Invisible, true)
            level3.text.setFlag(SpriteFlag.Invisible, true)
        }
        if (ammt >= sceneIdx * 8 + 4){
            level4 = levels[3] ? levels[3] : new level(false)
            level4.toggleUnlocked((4 + sceneIdx * 8) <= lvlsUnlocked)
            level4.sprite.x = 70
            y = seededRandom(y - 10 < 10 ? y : y - 10, y + 10 > screen.width - 10 ? y : y + 10, seed + 4 + sceneIdx * 8)
            level4.sprite.y = y
            if (specialLevels[4 + sceneIdx * 8]) level4.sprite.setImage(4 + sceneIdx * 8 <= lvlsUnlocked ? specialLevels[4 + sceneIdx * 8].unlocked : specialLevels[4 + sceneIdx * 8].locked)
            level4.text.setText((4 + sceneIdx * 8).toString())
            level4.text.setPosition(level4.sprite.x, y)
            level4.sprite.setFlag(SpriteFlag.Invisible, false)
            level4.text.setFlag(SpriteFlag.Invisible, false)
        } else if (levels[3]) {
            level4 = levels[3]
            level4.sprite.setFlag(SpriteFlag.Invisible, true)
            level4.text.setFlag(SpriteFlag.Invisible, true)
        }
        if (ammt >= sceneIdx * 8 + 5){
            level5 = levels[4] ? levels[4] : new level(false)
            level5.toggleUnlocked((5 + sceneIdx * 8) <= lvlsUnlocked)
            level5.sprite.x = 90
            y = seededRandom(y - 10 < 10 ? y : y - 10, y + 10 > screen.width - 10 ? y : y + 10, seed + 5 + sceneIdx * 8)
            level5.sprite.y = y
            if (specialLevels[5 + sceneIdx * 8]) level5.sprite.setImage(5 + sceneIdx * 8 <= lvlsUnlocked ? specialLevels[5 + sceneIdx * 8].unlocked : specialLevels[5 + sceneIdx * 8].locked)
            level5.text.setText((5 + sceneIdx * 8).toString())
            level5.text.setPosition(level5.sprite.x, y)
            level5.sprite.setFlag(SpriteFlag.Invisible, false)
            level5.text.setFlag(SpriteFlag.Invisible, false)
        } else if (levels[4]) {
            level5 = levels[4]
            level5.sprite.setFlag(SpriteFlag.Invisible, true)
            level5.text.setFlag(SpriteFlag.Invisible, true)
        }
        if (ammt >= sceneIdx * 8 + 6){
            level6 = levels[5] ? levels[5] : new level(false)
            level6.toggleUnlocked((6 + sceneIdx * 8) <= lvlsUnlocked)
            level6.sprite.x = 110
            y = seededRandom(y - 10 < 10 ? y : y - 10, y + 10 > screen.width - 10 ? y : y + 10, seed + 6 + sceneIdx * 8)
            level6.sprite.y = y
            level6.text.setText((6 + sceneIdx * 8).toString())
            level6.text.setPosition(level6.sprite.x, y)
            level6.sprite.setFlag(SpriteFlag.Invisible, false)
            level6.text.setFlag(SpriteFlag.Invisible, false)
        } else if (levels[5]) {
            level6 = levels[5]
            level6.sprite.setFlag(SpriteFlag.Invisible, true)
            level6.text.setFlag(SpriteFlag.Invisible, true)
        }
        if (ammt >= sceneIdx * 8 + 7){
            level7 = levels[6] ? levels[6] : new level(false)
            level7.toggleUnlocked((7 + sceneIdx * 8) <= lvlsUnlocked)
            level7.sprite.x = 130
            y = seededRandom(y - 10 < 10 ? y : y - 10, y + 10 > screen.width - 10 ? y : y + 10, seed + 7 + sceneIdx * 8)
            level7.sprite.y = y
            level7.text.setText((7 + sceneIdx * 8).toString())
            level7.text.setPosition(level7.sprite.x, y)
            level7.sprite.setFlag(SpriteFlag.Invisible, false)
            level7.text.setFlag(SpriteFlag.Invisible, false)
        } else if (levels[6]) {
            level7 = levels[6]
            level7.sprite.setFlag(SpriteFlag.Invisible, true)
            level7.text.setFlag(SpriteFlag.Invisible, true)
        }
        if (ammt >= sceneIdx * 8 + 8){
            level8 = levels[7] ? levels[7] : new level(false)
            level8.toggleUnlocked((8 + sceneIdx * 8) <= lvlsUnlocked)
            level8.sprite.x = 150
            y = seededRandom(y - 10 < 10 ? y : y - 10, y + 10 > screen.width - 10 ? y : y + 10, seed + 8 + sceneIdx * 8)
            level8.sprite.y = y
            level8.text.setText((8 + sceneIdx * 8).toString())
            level8.text.setPosition(level8.sprite.x, y)
            level8.sprite.setFlag(SpriteFlag.Invisible, false)
            level8.text.setFlag(SpriteFlag.Invisible, false)
        } else if (levels[7]) {
            level8 = levels[7]
            level8.sprite.setFlag(SpriteFlag.Invisible, true)
            level8.text.setFlag(SpriteFlag.Invisible, true)
        }
        if(level1)levels.push(level1)
        if(level2)levels.push(level2)
        if(level3)levels.push(level3)
        if(level4)levels.push(level4)
        if(level5)levels.push(level5)
        if(level6)levels.push(level6)
        if(level7)levels.push(level7)
        if(level8)levels.push(level8)
        
        //console.log(bled)
        scene.setBackgroundImage(bled ? getNewBackground(sceneIdx) : backgrounds[sceneIdx])
    }
    function seededRandom(min: number, max: number, seed: number) {
        // Simple deterministic pseudo-random generator using a seed
        function xmur3(str: string) {
            let h = 1779033703 ^ str.length
            for (let i = 0; i < str.length; i++)
                h = Math.imul(h ^ str.charCodeAt(i), 3432918353);
            h = (h << 13) | (h >>> 19);
            return function () {
                h = Math.imul(h ^ (h >>> 16), 2246822507);
                h = Math.imul(h ^ (h >>> 13), 3266489909);
                return (h ^= h >>> 16) >>> 0;
            };
        }

        function sfc32(a: number, b: number, c: number, d: number) {
            return function () {
                a >>>= 0; b >>>= 0; c >>>= 0; d >>>= 0;
                let t = (a + b) | 0;
                a = b ^ (b >>> 9);
                b = (c + (c << 3)) | 0;
                c = (c << 21 | c >>> 11);
                d = (d + 1) | 0;
                t = (t + d) | 0;
                c = (c + t) | 0;
                return (t >>> 0) / 4294967296;
            };
        }

        // Create seed values from the string
        const seedGen = xmur3(seed.toString());
        const rand = sfc32(seedGen(), seedGen(), seedGen(), seedGen());

        return rand() * (max - min) + min;
    }
    function getNewBackground(index: number){
        let e: Image[] = []
        for(let i of backgrounds){
            e.push(i.clone())
        }
        let currentBkg = e[index%e.length]
        let previousBkg = index>0?e[(index-1)%e.length]:null
        let nextBkg = index<Math.ceil(levels.length/8)-1?e[(index+1)%e.length]:null
        if (previousBkg != null) {
            for (let y = 0; y < 120; y++) {
                let yam = Math.floor(seededRandom(-6, 6, sceneIdx + seed + y + 2950))
                if (yam == 6 || yam == -6) yam = 0
                if (yam >= 0) {
                    for (let i = 0; i < yam; i++) {
                        currentBkg.setPixel(i-1, y, previousBkg.getPixel(i-1, y))
                    }
                }
            }
        }
        if (nextBkg!=null) {
            for (let y = 0; y < 120; y++) {
                let yam = Math.floor(seededRandom(-6, 6, sceneIdx + seed + y + 2950))
                if (yam == 6||yam==-6) yam = 0
                if(yam <= 0){
                    for (let i = 0; i < -yam; i++) {
                        currentBkg.setPixel(160-i, y, nextBkg.getPixel(160-i, y))
                    }
                }
            }
        }
        return currentBkg
    }
    //%block="set the image $img for a level on scene $index that is unlocked? $unlocked"
    //%img.shadow="screen_image_picker"
    export function setLevelImage(img: Image, unlocked: boolean, index: number){
        if(unlocked){
            if(index==-1){
                oneUnlockedImage = img
            } else {
                unlockedImages[index] = img
            }
        } else {
            if(index==-1){
                oneLockedImage = img
            } else {
                lockedImages[index] = img
            }
        }
        //(unlocked?()=>{(index==-1?()=>{oneUnlockedImage=img}:()=>{unlockedImages[index]=img})()}:()=>{(index==-1?()=>{oneLockedImage=img}:()=>{lockedImages[index]=img})()})()
    }
    //%block
    export function hideMenu(){
        for(let i of levels){
            i.sprite.setFlag(SpriteFlag.Invisible, true)
            i.text.setFlag(SpriteFlag.Invisible, true)
        }
        cursor.setFlag(SpriteFlag.Invisible, true)
        scene.setBackgroundImage(img`
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
            ................................................................................................................................................................
        `)
        inMenu=false
    }
    //%block
    export function showMenu(){
        for (let i of levels) {
            i.sprite.setFlag(SpriteFlag.Invisible, false)
            i.text.setFlag(SpriteFlag.Invisible, false)
        }
        cursor.setFlag(SpriteFlag.Invisible, false)
        scene.setBackgroundImage(bled ? getNewBackground(sceneIdx) : backgrounds[sceneIdx])
        inMenu = true
    }
    //%block="set backgrounds to $bkgs || with bleeding? $bleeding"
    //%bkgs.shadow="lists_create_with"
    //%bkgs.defl="background_image_picker"
    export function setBackgrounds(bkgs: Image[], bleeding?: boolean){
        backgrounds=bkgs
        bled=bleeding?bleeding:false
    }
    //%draggableParameters="reporter"
    //%block="on level $index clicked, do"
    export function onLevelClicked(handler: (index: number)=>void){
        levelClickHandler = handler;
    }
    controller.left.onEvent(ControllerButtonEvent.Pressed, function () {
        //console.log(selected + ">0")
        if (selected > 0 && inMenu) {
            selected -= 1
            //console.log((selected+1)%8)
            if ((selected + 1) % 8 == 0 && sceneIdx != 0) {
                sceneIdx -= 1
                //console.log("prev scene")
                setupLevels(numLevels)
            }
            //console.logValue("prev index", selected - (sceneIdx * 8))
            let next = levels[selected - (sceneIdx * 8)].sprite
            cursor.setPosition(next.x, next.y)
        }
    })
    controller.left.onEvent(ControllerButtonEvent.Repeated, function () {
        //console.log(selected + ">0")
        if (selected > 0 && inMenu) {
            selected -= 1
            //console.log((selected+1)%8)
            if ((selected + 1) % 8 == 0 && sceneIdx != 0) {
                sceneIdx -= 1
                //console.log("prev scene")
                setupLevels(numLevels)
            }
            //console.logValue("prev index", selected - (sceneIdx * 8))
            let next = levels[selected - (sceneIdx * 8)].sprite
            cursor.setPosition(next.x, next.y)
        }
    })
    controller.right.onEvent(ControllerButtonEvent.Pressed, function () {
        //console.log((selected+1) + "<" + numLevels)
        if (selected + 1 < numLevels && inMenu) {
            selected += 1
            if (selected % 8 == 0 && selected != 0) {
                sceneIdx += 1
                //console.log("next scene")
                setupLevels(numLevels)
            }
            //console.logValue("next index", selected-(sceneIdx*8))
            let next = levels[selected - (sceneIdx * 8)].sprite
            cursor.setPosition(next.x, next.y)
        }
    })
    controller.right.onEvent(ControllerButtonEvent.Repeated, function () {
        //console.log((selected+1) + "<" + numLevels)
        if (selected + 1 < numLevels && inMenu) {
            selected += 1
            if (selected % 8 == 0 && selected != 0) {
                sceneIdx += 1
                //console.log("next scene")
                setupLevels(numLevels)
            }
            //console.logValue("next index", selected-(sceneIdx*8))
            let next = levels[selected - (sceneIdx * 8)].sprite
            cursor.setPosition(next.x, next.y)
        }
    })
    controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
        if (levelClickHandler && levels[selected].unlocked && inMenu) {
            levelClickHandler(selected + 1);
        } else if (inMenu) {
            game.splash("locked")
        }
    })
}